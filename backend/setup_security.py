#!/usr/bin/env python3
"""
Security Setup Script for Portfolio Backend
This script helps you configure security settings for production deployment.
"""

import os
import secrets
import sys
from pathlib import Path

def generate_secret_key():
    """Generate a secure secret key."""
    return secrets.token_urlsafe(32)

def create_env_file():
    """Create a .env file with secure defaults."""
    env_content = f"""# Production Environment Variables
# Generated by setup_security.py

# Security Configuration
SECRET_KEY={generate_secret_key()}
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Database Configuration
DATABASE_URL=sqlite:///./portfolio.db

# CORS Configuration - UPDATE THESE WITH YOUR ACTUAL DOMAINS
ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# File Upload Configuration
UPLOAD_DIR=uploads
MAX_FILE_SIZE=5242880

# Production Configuration
DEBUG=false
LOG_LEVEL=WARNING

# Additional Security Settings
# Add your production database URL here:
# DATABASE_URL=postgresql://user:password@localhost/dbname
"""
    
    env_file = Path(".env")
    if env_file.exists():
        print("‚ö†Ô∏è  .env file already exists!")
        response = input("Do you want to overwrite it? (y/N): ")
        if response.lower() != 'y':
            print("‚ùå Setup cancelled.")
            return False
    
    with open(env_file, 'w') as f:
        f.write(env_content)
    
    print(f"‚úÖ Created {env_file}")
    return True

def check_security():
    """Check current security configuration."""
    print("\nüîí Security Configuration Check")
    print("=" * 50)
    
    # Check if .env exists
    env_file = Path(".env")
    if env_file.exists():
        print("‚úÖ .env file exists")
    else:
        print("‚ùå .env file missing")
        return False
    
    # Check secret key
    try:
        from config import settings
        if len(settings.secret_key) >= 32:
            print("‚úÖ Secret key is secure")
        else:
            print("‚ùå Secret key is too short")
            return False
        
        # Check CORS
        if "*" in settings.allowed_origins:
            print("‚ö†Ô∏è  CORS allows all origins (not recommended for production)")
        else:
            print("‚úÖ CORS is properly configured")
        
        # Check debug mode
        if settings.debug:
            print("‚ö†Ô∏è  Debug mode is enabled (disable for production)")
        else:
            print("‚úÖ Debug mode is disabled")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå Configuration error: {e}")
        return False

def main():
    """Main setup function."""
    print("üîí Portfolio Backend Security Setup")
    print("=" * 50)
    
    # Check if we're in the right directory
    if not Path("config.py").exists():
        print("‚ùå Please run this script from the backend directory")
        sys.exit(1)
    
    # Create .env file
    if create_env_file():
        print("\nüìù Next Steps:")
        print("1. Edit .env file with your actual domain names")
        print("2. Update DATABASE_URL for production database")
        print("3. Set DEBUG=false for production")
        print("4. Test configuration with: python3 -c 'from config import settings; print(\"OK\")'")
        
        # Run security check
        if check_security():
            print("\nüéØ Security setup completed!")
        else:
            print("\n‚ö†Ô∏è  Please review and fix security issues above")
    else:
        print("‚ùå Setup failed")

if __name__ == "__main__":
    main() 